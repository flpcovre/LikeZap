services:
  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
      target: ${APP_ENV:-local}
    ports:
      - "3000:3000"
    restart: unless-stopped
    tty: true
    volumes:
      - ./client:/app
      - /app/node_modules
    stdin_open: true
    environment:
      - NODE_ENV=${APP_ENV:-local}
    depends_on:
      - api
    networks:
      - setup-network

  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    volumes:
      - ./api:/var/www/
    depends_on:
      - redis
    environment:
      APP_ENV: ${APP_ENV}
      APP_URL: ${APP_DOMAIN}
      DB_HOST: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_DATABASE: ${POSTGRES_DB}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - setup-network
  
  nginx:
    image: nginx:alpine
    container_name: nginx-server
    ports:
      - "8080:80"
    tty: true
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./client:/app
      - ./api:/var/www/
    networks:
      - setup-network

  postgres:
    image: postgres:15
    container_name: ${POSTGRES_HOST}
    restart: always
    tty: true
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - setup-network

  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres
    networks:
      - setup-network

  redis:
    image: redis:alpine
    container_name: ${REDIS_HOST}
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - setup-network
  
networks:
  setup-network:
    driver: bridge
  
volumes:
  pgdata:
  redisdata: