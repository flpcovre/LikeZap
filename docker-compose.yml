version: '3.8'

services:
  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
      target: dev
    ports:
      - "5173:5173"
    restart: unless-stopped
    tty: true
    volumes:
      - ./client:/app
      - /app/node_modules
    stdin_open: true
    depends_on:
      - api
    networks:
      - setup-network

  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    volumes:
      - ./api:/var/www/
    depends_on:
      - redis
    networks:
      - setup-network
  
  nginx:
    image: nginx:alpine
    container_name: nginx-server
    ports:
      - "8080:80"
    tty: true
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./client:/app
      - ./api:/var/www/
    networks:
      - setup-network
  
  mysql:
    image: mysql:8
    container_name: likezap-db
    restart: always
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}	
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - setup-network

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:5.2
    restart: always
    ports:
      - "8888:80"
    environment:
      PMA_HOST: likezap-db
      PMA_ABSOLUTE_URI: "https://example.com/phpmyadmin/"
    depends_on:
      - mysql
    networks:
      - setup-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - setup-network
  
networks:
  setup-network:
    driver: bridge
  
volumes:
  dbdata:
  redisdata:
      